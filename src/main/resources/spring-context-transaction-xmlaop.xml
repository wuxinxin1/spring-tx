<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
 http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
 http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
 http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

    <!--配置事务管理器,凡是使用jdbc操作数据库的，那么都使用DataSourceTransactionManager-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置事务的属性:传播性，是否只读，隔离级别-->
    <tx:advice id="advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="transferMoney" isolation="DEFAULT" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <!--生成代理对象-->
    <aop:config>
        <!--配置切点表达式，指定为哪些类的方法增强-->
        <aop:pointcut id="pc" expression="execution(* com.example.spring.transaction.xmlservice.AccountServiceImpl.*(..))"/>
        <!--制定通知，切点表达式  aop:aspect,aop:advisor 都是指定切面，但是aop:advisor的切面必须要实现Advice接口-->
        <aop:advisor advice-ref="advice" pointcut-ref="pc"/>
    </aop:config>

    <!--数据源-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/spring"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!--dao-->
    <bean id="accountDao" class="com.example.spring.transaction.dao.AccountDaoImpl">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--配置service-->
    <bean id="accountService" class="com.example.spring.transaction.xmlservice.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"/>
    </bean>
</beans>